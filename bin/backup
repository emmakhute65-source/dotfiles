#!/usr/bin/env bash

log_dir="$HOME/var/"
log_file="${log_dir}duplicity.log"
gpg_key="018FAC02"
dir="$HOME"
backend="s3://s3.amazonaws.com/tylercipriani-backup/$(hostname -s)"
backend_mail="s3://s3.amazonaws.com/tylercipriani-backup/Mail"
backend_pictures="s3://s3.amazonaws.com/tylercipriani-backup/Pictures"

show_help() {
  cat<<DOC
  Usage: $(basename $0) (--all|--pictures|--other|--mail)
DOC
}

get_creds() {
  export AWS_ACCESS_KEY_ID=$(/home/tyler/bin/getnetrc duplicity login)
  export AWS_SECRET_ACCESS_KEY=$(/home/tyler/bin/getnetrc duplicity)
}

backup_pictures() {
  printf "Pictures\n---\n" >> "$log_file"

  duplicity \
    --verbosity info \
    --encrypt-key="$gpg_key" \
    --sign-key="$gpg_key" \
    --full-if-older-than 7D \
    --asynchronous-upload \
    --volsize=100 \
    --log-file "$log_file" \
      --include "$HOME/Pictures" \
      --exclude "**" \
    "$dir" "$backend_pictures"
}

backup_mail() {
  printf "Mail\n---\n" >> "$log_file"

  duplicity \
    --verbosity info \
    --encrypt-key="$gpg_key" \
    --sign-key="$gpg_key" \
    --full-if-older-than 7D \
    --asynchronous-upload \
    --volsize=100 \
    --log-file "$log_file" \
    --include "$HOME/Mail" \
    --exclude "**" \
    "$dir" "$backend_mail"
}

backup_other() {
  printf "Everything else\n---\n" >> "$log_file"

  # http://askubuntu.com/a/40997
  duplicity \
    --verbosity info \
    --encrypt-key="$gpg_key" \
    --sign-key="$gpg_key" \
    --full-if-older-than 7D \
    --asynchronous-upload \
    --volsize=100 \
    --log-file "$log_file" \
    --exclude "$HOME/.adobe" \
    --exclude "$HOME/.macromedia" \
    --exclude "$HOME/.cache" \
    --exclude "$HOME/.gvfs" \
    --exclude "$HOME/.local/share/gvfs-metadata" \
    --exclude "$HOME/.Private" \
    --exclude "$HOME/.dbus" \
    --exclude "$HOME/.cache" \
    --exclude "$HOME/.Trash" \
    --exclude "$HOME/.local/share/Trash" \
    --exclude "$HOME/.cddb" \
    --exclude "$HOME/.aptitude" \
    --exclude "$HOME/.xsession-errors" \
    --exclude "$HOME/.recently-used" \
    --exclude "$HOME/.recently-used.xbel" \
    --exclude "$HOME/.thumbnails" \
    --exclude "$HOME/.Xauthority" \
    --exclude "$HOME/.ICEauthority" \
    --exclude "$HOME/.gksu.lock" \
    --exclude "$HOME/.pulse" \
    --exclude "$HOME/.pulse-cookie" \
    --exclude "$HOME/.esd_auth" \
    --exclude "$HOME/.kde" \
    --exclude "$HOME/.mozilla" \
    --exclude "$HOME/.opera" \
    --exclude "$HOME/.komodoedit" \
    --exclude "$HOME/.config/google-chrome" \
    --exclude "$HOME/.pulse/icons" \
    --exclude "$HOME/.java/deployment/cache" \
    --exclude "$HOME/.icedteaplugin" \
    --exclude "$HOME/.icedtea" \
    --exclude "$HOME/.gnome2/epiphany/favicon_cache" \
    --exclude "$HOME/.gnupg" \
    --exclude "$HOME/Pictures" \
    --exclude "$HOME/Mail" \
    "$dir" "$backend"
}

backup_everything() {
  backup_pictures
  backup_mail
  backup_other
}

cleanup() {
  duplicity \
    remove-older-than 1M \
    "$backend"

  duplicity \
    remove-older-than 1M \
    "$backend_pictures"

  duplicity \
    remove-older-than 1M \
    "$backend_mail"

  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
}

main() {

  if (($# < 1)) || (($# > 1)); then
    show_help
    exit 1
  fi

  get_creds

  mkdir -p "$log_dir"

  if [ -f "$log_file" ]; then
    cat /dev/null > "$log_file"
  fi

  case $1 in
    other|--other|-o)
      backup_other
      ;;
    mail|--mail|-m)
      backup_mail
      ;;
    pic*|--pic*|-p)
      backup_pictures
      ;;
    all|--all|-a)
      backup_everything
      ;;
    *)
      show_help
      cleanup
      exit 1
      ;;
  esac

  cleanup
}

main "$@"